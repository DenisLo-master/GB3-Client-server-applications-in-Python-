# 1. Задание на закрепление знаний по модулю CSV. Написать скрипт, осуществляющий выборку определенных данных из
# файлов info_1.txt, info_2.txt, info_3.txt и формирующий новый «отчетный» файл в формате CSV. Для этого: Создать
# функцию get_data(), в которой в цикле осуществляется перебор файлов с данными, их открытие и считывание данных. В
# этой функции из считанных данных необходимо с помощью регулярных выражений извлечь значения параметров
# «Изготовитель системы», «Название ОС», «Код продукта», «Тип системы». Значения каждого параметра поместить в
# соответствующий список. Должно получиться четыре списка — например, os_prod_list, os_name_list, os_code_list,
# os_type_list. В этой же функции создать главный список для хранения данных отчета — например, main_data — и
# поместить в него названия столбцов отчета в виде списка: «Изготовитель системы», «Название ОС», «Код продукта»,
# «Тип системы». Значения для этих столбцов также оформить в виде списка и поместить в файл main_data (также для
# каждого файла); Создать функцию write_to_csv(), в которую передавать ссылку на CSV-файл. В этой функции реализовать
# получение данных через вызов функции get_data(), а также сохранение подготовленных данных в соответствующий
# CSV-файл; Проверить работу программы через вызов функции write_to_csv().

from chardet import detect
import re


def get_data():
    file_list = ['info_1.txt', 'info_2.txt', 'info_3.txt']
    for file in file_list:
        with open(file, 'rb') as f:
            content = f.read()
            print(detect(content))
            encoding = detect(content)['encoding']

        with open(file, encoding=encoding) as f:
            content = f.read()
            print('!' * 50, content)

        for match in re.finditer('Название\sОС:\s*\w*$', content):
            print('результат:', match[0], match.start(), 'YES' if match else 'NO')

get_data()
